name: Backend Test, Build, Deploy

on:
  push:
    branches:
      - main
    tags:
      - "v[0-9]+.[0-9]+.[0-9]+"
    paths:
      - "backend/**/*.go"
  pull_request:
    branches:
      - main
    paths:
      - "backend/**/*.go"

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  test:
    runs-on: ubuntu-latest
    timeout-minutes: 5
    defaults:
      run:
        working-directory: ./backend
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Setup Golang
        uses: actions/setup-go@v4
        with:
          go-version: "1.21"
          cache: false
      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 21
      - name: Dowloand Oapi-Codegen
        run: go install github.com/deepmap/oapi-codegen/v2/cmd/oapi-codegen@v2.1
      - name: Generate from OpenApi spec
        run: npm run --prefix ./api generate-go -y
      - name: Test
        working-directory: ./backend-rewrite
        run: go test -v ./...

  build-push-docker:
    if: github.ref_type == 'tag'
    needs: test
    runs-on: ubuntu-latest
    timeout-minutes: 5
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Extract tags for Docker
        uses: docker/metadata-action@v4
        id: metadata
        with:
          images: nesquiko/swimlogs-backend
          tags: type=semver,pattern={{version}}
      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_TOKEN }}
      - name: Build & Push image
        uses: docker/build-push-action@v4
        with:
          context: ./
          tags: ${{ steps.metadata.outputs.tags }}
          push: ${{ github.ref_type == 'tag' }}

  deploy:
    if: github.ref_type == 'tag'
    needs: build-push-docker
    runs-on: ubuntu-latest
    timeout-minutes: 2
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Extract latest version
        id: extract_version
        run: echo "version=${GITHUB_REF#refs/tags/v}" >> $GITHUB_OUTPUT
      - name: Update docker-compose.yaml
        run: sed -i -E 's|(nesquiko/swimlogs-backend:)latest|\1${{ steps.extract_version.outputs.version }}|' docker-compose.yaml
      - name: Deploy new docker-compose.yaml
        uses: appleboy/scp-action@v0.1.4
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          password: ${{ secrets.SSH_PASSWORD }}
          source: "docker-compose.yaml"
          target: /opt/swimlogs
      - name: Restart Docker compose
        uses: appleboy/ssh-action@v0.1.10
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          password: ${{ secrets.SSH_PASSWORD }}
          script: |
            cd /opt/swimlogs
            docker-compose up -d backend
