openapi: 3.1.0
info:
  version: 1.0.0
  title: SwimLogs API
  license:
    name: MIT License
    url: https://opensource.org/licenses/MIT
  description: Openapi specification for SwimLogs API.
servers:
  - url: https://www.swimlogs.com/api
    description: Prod backend server
tags:
  - name: Trainings
paths:
  /trainings:
    post:
      summary: Create new training
      tags:
        - Trainings
      operationId: createTraining
      requestBody:
        $ref: '#/components/requestBodies/CreateTrainingRequest'
      responses:
        '201':
          $ref: '#/components/responses/CreateTrainingReponse'
        '400':
          $ref: '#/components/responses/InvalidTrainingResponse'
  /trainings/{id}:
    parameters:
      - name: id
        in: path
        required: true
        description: Id of a training
        schema:
          type: string
          format: uuid
    get:
      summary: Get a training by id
      tags:
        - Trainings
      operationId: trainingById
      responses:
        '200':
          $ref: '#/components/responses/TrainingResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
    patch:
      summary: Edit training session
      tags:
        - Trainings
      operationId: editTrainingSession
      requestBody:
        $ref: '#/components/requestBodies/EditSessionRequest'
      responses:
        '200':
          $ref: '#/components/responses/EditTrainingResponse'
        '400':
          $ref: '#/components/responses/InvalidSessionResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
    delete:
      summary: Delete a training
      tags:
        - Trainings
      operationId: deleteTraining
      responses:
        '204':
          description: Training was deleted
        '404':
          $ref: '#/components/responses/NotFoundResponse'
  /trainings/{id}/sets/{setId}:
    parameters:
      - name: id
        in: path
        required: true
        description: Id of a training
        schema:
          type: string
          format: uuid
      - name: setId
        in: path
        required: true
        description: Id of a set
        schema:
          type: string
          format: uuid
    patch:
      summary: Edit set
      tags:
        - Trainings
      operationId: editSet
      responses:
        '200':
          $ref: '#/components/responses/EditSetResponse'
        '400':
          $ref: '#/components/responses/InvalidSetResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
    delete:
      summary: Delete a set
      tags:
        - Trainings
      operationId: deleteSet
      responses:
        '204':
          description: Set was deleted
        '404':
          $ref: '#/components/responses/NotFoundResponse'
  /trainings/summaries:
    get:
      summary: Training summaries
      tags:
        - Trainings
      operationId: summariesPage
      parameters:
        - name: page
          in: query
          required: true
          description: Which page to return, starts at 0
          schema:
            type: integer
            example: 0
            minimum: 0
        - name: pageSize
          in: query
          required: true
          description: How many details to return
          schema:
            type: integer
            example: 10
            minimum: 1
      responses:
        '200':
          $ref: '#/components/responses/TrainingSummariesResponse'
  /trainings/summaries/current-week:
    get:
      summary: Training summaries for this week
      tags:
        - Trainings
      operationId: summariesCurrentWeek
      responses:
        '200':
          $ref: '#/components/responses/TrainingSummariesCurrentWeekResponse'
components:
  schemas:
    EquipmentEnum:
      type: string
      enum:
        - Fins
        - Monofin
        - Snorkel
        - Board
        - Paddles
    StartTypeEnum:
      type: string
      enum:
        - None
        - Interval
        - Pause
    GroupEnum:
      type: string
      enum:
        - sprint
        - middle
        - long
        - mono
        - bifi
    NewTrainingSet:
      type: object
      properties:
        setOrder:
          type: integer
          description: Indicates on what place in training this set is
        repeat:
          type: integer
          description: How many times to repeat this set
        distanceMeters:
          type: integer
          example: 400
        description:
          type: string
          description: Description of what to swim
          example: Freestyle
        totalDistance:
          type: integer
          description: Total distance in this set
          example: 800
        equipment:
          type: array
          items:
            $ref: '#/components/schemas/EquipmentEnum'
        startType:
          $ref: '#/components/schemas/StartTypeEnum'
        startSeconds:
          type: integer
          description: Used by starts which require a time parameter, Interval and Pause
          example: 60
        group:
          $ref: '#/components/schemas/GroupEnum'
    NewTraining:
      type: object
      properties:
        start:
          type: string
          format: date-time
          description: On what date and time does the training occur
        durationMin:
          type: integer
          description: How long does the session last, in minutes
          example: 60
        totalDistance:
          type: integer
          description: Sum of all distances in sets in meters
          example: 2100
        sets:
          type: array
          items:
            $ref: '#/components/schemas/NewTrainingSet'
            required:
              - setOrder
              - repeat
              - distanceMeters
              - totalDistance
              - startType
    TrainingSummary:
      type: object
      properties:
        id:
          type: string
          format: uuid
        start:
          type: string
          format: date-time
          description: On what date and time does the training occur
        durationMin:
          type: integer
          description: How long does the session last, in minutes
          example: 60
        totalDistance:
          type: integer
          description: Total distance in the training in meters
          example: 2200
    ErrorDetail:
      type: object
      properties:
        title:
          type: string
          description: Short human-readable summary of the error
        status:
          type: integer
          description: HTTP result status
        code:
          type: string
          description: Machine understandable code of the error instance
        detail:
          type: string
          description: A human-readable explanation of the error
      additionalProperties: true
      required:
        - title
        - status
        - code
        - detail
    InvalidSessionError:
      allOf:
        - $ref: '#/components/schemas/ErrorDetail'
      example:
        title: Submitted training session is invalid
        status: 400
        code: training.session.invalid
        detail: Invalid training session
    InvalidSetError:
      allOf:
        - $ref: '#/components/schemas/ErrorDetail'
      example:
        title: Set is not valid
        status: 400
        code: invalid.set
        detail: Set "1" is not valid
        setId: 6c9a9b8a-a81a-4c5b-9416-0c591587f1a3
        setOrder: 1
    TrainingSet:
      type: object
      properties:
        id:
          type: string
          format: uuid
        setOrder:
          type: integer
          description: Indicates on what place in training this set is
        repeat:
          type: integer
          description: How many times to repeat this set
        distanceMeters:
          type: integer
          example: 400
        description:
          type: string
          description: Description of what to swim
          example: Freestyle
        totalDistance:
          type: integer
          description: Total distance in this set
          example: 800
        equipment:
          type: array
          items:
            $ref: '#/components/schemas/EquipmentEnum'
        startType:
          $ref: '#/components/schemas/StartTypeEnum'
        startSeconds:
          type: integer
          description: Used by starts which require a time parameter, Interval and Pause
          example: 60
        group:
          $ref: '#/components/schemas/GroupEnum'
      required:
        - id
        - setOrder
        - repeat
        - distanceMeters
        - totalDistance
        - startType
    Training:
      type: object
      properties:
        id:
          type: string
          format: uuid
        start:
          type: string
          format: date-time
          description: On what date and time does the training occur
        durationMin:
          type: integer
          description: How long does the session last, in minutes
          example: 60
        totalDistance:
          type: integer
          description: Sum of all distances in blocks in meters
          example: 2100
        sets:
          type: array
          items:
            $ref: '#/components/schemas/TrainingSet'
            required:
              - id
              - start
              - durationMin
              - totalDistance
              - sets
    NotFoundError:
      allOf:
        - $ref: '#/components/schemas/ErrorDetail'
      example:
        title: Resource was not found
        status: 404
        code: not.found
        detail: Resource with id "aa1ed13a-6455-4d93-b788-bab98b08b40c" was not found
    Pagination:
      description: Pagination metadata about paginated response
      type: object
      properties:
        total:
          type: integer
          description: Total count of all items
          example: 13
        page:
          type: integer
          description: Number of page returned
          example: 0
        pageSize:
          type: integer
          description: How many items are in page
          example: 10
      required:
        - total
        - page
        - pageSize
  requestBodies:
    CreateTrainingRequest:
      description: Request for creating a training
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/NewTraining'
            required:
              - start
              - durationMin
              - totalDistance
              - sets
    EditSessionRequest:
      description: Request for editing a training session
      required: true
      content:
        application/json:
          schema:
            type: object
            properties:
              start:
                type: string
                format: date-time
                description: On what date and time does the training occur
              durationMin:
                type: integer
                description: How long does the session last, in minutes
                example: 60
  responses:
    CreateTrainingReponse:
      description: New training was successfully created and detail about new training is returned
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/TrainingSummary'
            required:
              - id
              - start
              - durationMin
              - totalDistance
    InvalidTrainingResponse:
      description: Contains reason why training is invalid
      content:
        application/problem+json:
          schema:
            oneOf:
              - $ref: '#/components/schemas/InvalidSessionError'
              - $ref: '#/components/schemas/InvalidSetError'
    TrainingResponse:
      description: Response with a training
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Training'
            required:
              - id
              - start
              - durationMin
              - totalDistance
              - sets
    NotFoundResponse:
      description: Resource was not found
      content:
        application/problem+json:
          schema:
            oneOf:
              - $ref: '#/components/schemas/NotFoundError'
    EditTrainingResponse:
      description: Training successfully edited
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/TrainingSummary'
            required:
              - id
              - start
              - durationMin
              - totalDistance
    InvalidSessionResponse:
      description: Submitted training session is invalid
      content:
        application/problem+json:
          schema:
            $ref: '#/components/schemas/InvalidSessionError'
    EditSetResponse:
      description: Set successfully edited
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/TrainingSet'
            required:
              - id
              - start
              - durationMin
              - totalDistance
              - sets
    InvalidSetResponse:
      description: Submitted training set is invalid
      content:
        application/problem+json:
          schema:
            $ref: '#/components/schemas/InvalidSetError'
    TrainingSummariesResponse:
      description: Paginated list of training summaries
      content:
        application/json:
          schema:
            type: object
            properties:
              details:
                type: array
                items:
                  $ref: '#/components/schemas/TrainingSummary'
                  required:
                    - id
                    - start
                    - durationMin
                    - totalDistance
              pagination:
                $ref: '#/components/schemas/Pagination'
            required:
              - details
              - pagination
    TrainingSummariesCurrentWeekResponse:
      description: List of training details in current week, sorted by date and start time
      content:
        application/json:
          schema:
            type: object
            required:
              - details
            properties:
              details:
                type: array
                items:
                  $ref: '#/components/schemas/TrainingSummary'
                  required:
                    - id
                    - start
                    - durationMin
                    - totalDistance
