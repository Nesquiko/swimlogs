user  nginx;
worker_processes  auto;

error_log  /var/log/nginx/error.log notice;
pid        /var/run/nginx.pid;

events {
    worker_connections  1024;
}

http {
	server_tokens off;
	charset utf-8;

    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';

    access_log  /var/log/nginx/access.log  main;

    sendfile        on;

    keepalive_timeout  65;

	limit_req_zone $binary_remote_addr zone=one:1m rate=10r/s;
	limit_req_status 429;

	server {
		listen 80 default_server;
		server_name swimlogs.com www.swimlogs.com;

		location ~ /.well-known/acme-challenge/ {
			root /var/www/certbot;
		}

		return 301 https://www.swimlogs.com$request_uri;
	}

	proxy_cache_path /var/cache/nginx levels=1:2 keys_zone=swimlogs:2m max_size=100m inactive=60m use_temp_path=off;

	server {
		resolver 127.0.0.11 valid=30s ipv6=off; # docker dns

		listen 443 ssl;
		listen [::]:443 ssl;

		ssl_certificate /etc/letsencrypt/live/www.swimlogs.com/fullchain.pem;
		ssl_certificate_key /etc/letsencrypt/live/www.swimlogs.com/privkey.pem;
		server_name www.swimlogs.com;

		root /usr/share/nginx/html;
		index index.html;

		location / {
			proxy_cache swimlogs;
			proxy_cache_use_stale error timeout http_500 http_502 http_503 http_504;
			proxy_cache_lock on;

			try_files $uri $uri/ /index.html;
		}

		# reverse proxy to backend
		location /api/ {
			proxy_cache swimlogs;
			proxy_cache_use_stale error timeout http_500 http_502 http_503 http_504;
			proxy_cache_lock on;

			proxy_set_header  Host $host;
			proxy_set_header  X-Real-IP $remote_addr;

			proxy_set_header Forwarded "$proxy_add_forwarded;proto=$scheme";

			proxy_pass              http://backend:42069/;
		}

		location ~ /.well-known/acme-challenge/ {
			root /var/www/certbot;
		}
	}

	map $remote_addr $proxy_forwarded_elem {
		# IPv4 addresses can be sent as-is
		~^[0-9.]+$          "for=$remote_addr";

		# IPv6 addresses need to be bracketed and quoted
		~^[0-9A-Fa-f:.]+$   "for=\"[$remote_addr]\"";

		# Unix domain socket names cannot be represented in RFC 7239 syntax
		default             "for=unknown";
	}

	map $http_forwarded $proxy_add_forwarded {
		# If the incoming Forwarded header is syntactically valid, append to it
		"~^(,[ \\t]*)*([!#$%&'*+.^_`|~0-9A-Za-z-]+=([!#$%&'*+.^_`|~0-9A-Za-z-]+|\"([\\t \\x21\\x23-\\x5B\\x5D-\\x7E\\x80-\\xFF]|\\\\[\\t \\x21-\\x7E\\x80-\\xFF])*\"))?(;([!#$%&'*+.^_`|~0-9A-Za-z-]+=([!#$%&'*+.^_`|~0-9A-Za-z-]+|\"([\\t \\x21\\x23-\\x5B\\x5D-\\x7E\\x80-\\xFF]|\\\\[\\t \\x21-\\x7E\\x80-\\xFF])*\"))?)*([ \\t]*,([ \\t]*([!#$%&'*+.^_`|~0-9A-Za-z-]+=([!#$%&'*+.^_`|~0-9A-Za-z-]+|\"([\\t \\x21\\x23-\\x5B\\x5D-\\x7E\\x80-\\xFF]|\\\\[\\t \\x21-\\x7E\\x80-\\xFF])*\"))?(;([!#$%&'*+.^_`|~0-9A-Za-z-]+=([!#$%&'*+.^_`|~0-9A-Za-z-]+|\"([\\t \\x21\\x23-\\x5B\\x5D-\\x7E\\x80-\\xFF]|\\\\[\\t \\x21-\\x7E\\x80-\\xFF])*\"))?)*)?)*$" "$http_forwarded, $proxy_forwarded_elem";

		# Otherwise, replace it
		default "$proxy_forwarded_elem";
	}
}

